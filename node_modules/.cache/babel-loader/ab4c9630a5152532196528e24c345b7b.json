{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React-Test\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React-Test\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React-Test\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React-Test\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React-Test\\\\react-test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React-Test\\\\react-test\\\\src\\\\PDFComponent.js\";\nimport React, { Component } from 'react';\nimport { Document, Page } from 'react-pdf/dist/entry.noworker';\nvar options = {\n  cMapUrl: 'cmaps/',\n  cMapPacked: true\n};\n\nvar PDFComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PDFComponent, _Component);\n\n  function PDFComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PDFComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PDFComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      file: './sample.pdf',\n      numPages: null\n    };\n\n    _this.onFileChange = function (event) {\n      _this.setState({\n        file: \"event.target.files[0]\"\n      });\n    };\n\n    _this.onDocumentLoadSuccess = function (_ref) {\n      var numPages = _ref.numPages;\n\n      _this.setState({\n        numPages: numPages\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PDFComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          file = _this$state.file,\n          numPages = _this$state.numPages;\n      return React.createElement(\"div\", {\n        className: \"Example__container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Example__container__load\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Load from file:\"), ' ', React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.onFileChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Document, {\n        file: \"https://danhiggins23.github.io/images/Dan%20Higgins%20-%20Updated.pdf?\",\n        onLoadSuccess: this.onDocumentLoadSuccess,\n        options: options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, Array.from(new Array(numPages), function (el, index) {\n        return React.createElement(Page, {\n          key: \"page_\".concat(index + 1),\n          pageNumber: index + 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return PDFComponent;\n}(Component);\n\nexport { PDFComponent as default };","map":{"version":3,"sources":["C:\\Users\\Admin\\Desktop\\React-Test\\react-test\\src\\PDFComponent.js"],"names":["React","Component","Document","Page","options","cMapUrl","cMapPacked","PDFComponent","state","file","numPages","onFileChange","event","setState","onDocumentLoadSuccess","Array","from","el","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,+BAA/B;AAGA,IAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,QADK;AAEdC,EAAAA,UAAU,EAAE;AAFE,CAAhB;;IAKqBC,Y;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,cADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;UAKRC,Y,GAAe,UAACC,KAAD,EAAW;AACxB,YAAKC,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,K;;UAEDK,qB,GAAwB,gBAAkB;AAAA,UAAfJ,QAAe,QAAfA,QAAe;;AACxC,YAAKG,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD,K;;;;;;;6BAEQ;AAAA,wBACoB,KAAKF,KADzB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,QADP,eACOA,QADP;AAGP,aAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEG,GAFH,EAGE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAE,KAAKC,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAC,wEADP;AAEE,QAAA,aAAa,EAAE,KAAKG,qBAFtB;AAGE,QAAA,OAAO,EAAEV,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMIW,KAAK,CAACC,IAAN,CACE,IAAID,KAAJ,CAAUL,QAAV,CADF,EAEE,UAACO,EAAD,EAAKC,KAAL;AAAA,eACE,oBAAC,IAAD;AACE,UAAA,GAAG,iBAAUA,KAAK,GAAG,CAAlB,CADL;AAEE,UAAA,UAAU,EAAEA,KAAK,GAAG,CAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAAA,OAFF,CANJ,CADF,CATF,CAFJ;AAgCD;;;;EAnDuCjB,S;;SAArBM,Y","sourcesContent":["import React, { Component } from 'react';\r\nimport { Document, Page } from 'react-pdf/dist/entry.noworker';\r\n \r\n\r\nconst options = {\r\n  cMapUrl: 'cmaps/',\r\n  cMapPacked: true,\r\n};\r\n\r\nexport default class PDFComponent extends Component {\r\n  state = {\r\n    file: './sample.pdf',\r\n    numPages: null,\r\n  }\r\n\r\n  onFileChange = (event) => {\r\n    this.setState({\r\n      file: \"event.target.files[0]\",\r\n    });\r\n  }\r\n\r\n  onDocumentLoadSuccess = ({ numPages }) => {\r\n    this.setState({ numPages });\r\n  }\r\n\r\n  render() {\r\n    const { file, numPages } = this.state;\r\n\r\n    return (\r\n\r\n        <div className=\"Example__container\">\r\n          <div className=\"Example__container__load\">\r\n            <label htmlFor=\"file\">Load from file:</label>\r\n            {' '}\r\n            <input\r\n              type=\"file\"\r\n              onChange={this.onFileChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Document\r\n              file=\"https://danhiggins23.github.io/images/Dan%20Higgins%20-%20Updated.pdf?\"\r\n              onLoadSuccess={this.onDocumentLoadSuccess}\r\n              options={options}\r\n            >\r\n              {\r\n                Array.from(\r\n                  new Array(numPages),\r\n                  (el, index) => (\r\n                    <Page\r\n                      key={`page_${index + 1}`}\r\n                      pageNumber={index + 1}\r\n                    />\r\n                  ),\r\n                )\r\n              }\r\n            </Document>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}